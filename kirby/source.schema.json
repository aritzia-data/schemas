{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://acme.com/source.schema.json",
    "title": "Source",
    "description": "A Kirby data source",
    "type": "object",
    "properties": {
        "type": {
            "type": "string",
            "description": "The type of source",
            "enum": [
                "externalPush",
                "scheduledJob",
                "googleSheet"
            ]
        }
    },
    "anyOf": [
        {
            "$ref": "#/$defs/externalPushSource"
        },
        {
            "$ref": "#/$defs/scheduledJobSource"
        },
        {
            "$ref": "#/$defs/googleSheetSource"
        }
    ],
    "$defs": {
        "authenticationType": {
            "title": "Source authentication type",
            "type": "object",
            "properties": {
                "authType": {
                    "type": "string",
                    "description": "The type of authentication used",
                    "default": "basic_auth"
                },
                "authHeader": {
                    "type": "string",
                    "description": "The header used for authentication",
                    "default": "Authorization"
                }
            },
            "additionalProperties": false
        },
        "externalPushSource": {
            "title": "External push source",
            "properties": {
                "type": {
                    "const": "externalPush"
                },
                "authentication": {
                    "$ref": "#/$defs/authenticationType"
                },
                "isSLT": {
                    "type": "boolean",
                    "description": "If the source is an SLT source"
                }
            },
            "required": [
                "type",
                "isSLT"
            ],
            "additionalProperties": false
        },
        "scheduledJobSource": {
            "title": "Scheduled job source",
            "properties": {
                "type": {
                    "const": "scheduledJob"
                },
                "authentication": {
                    "$ref": "#/$defs/authenticationType"
                },
                "frequency": {
                    "type": "string",
                    "description": "The frequency of the scheduled job source, as a cron expression",
                    "$comment": "Supports the POSIX spec. Taken from https://www.codeproject.com/Tips/5299523/Regex-for-cron-expressions and backslash escaped.",
                    "pattern": "^(?#minute)(\\*|(?:[0-9]|(?:[1-5][0-9]))(?:(?:\\-[0-9]|\\-(?:[1-5][0-9]))?|\r\n(?:\\,(?:[0-9]|(?:[1-5][0-9])))*)) (?#hour)(\\*|(?:[0-9]|1[0-9]|2[0-3])\r\n(?:(?:\\-(?:[0-9]|1[0-9]|2[0-3]))?|(?:\\,(?:[0-9]|1[0-9]|2[0-3]))*)) \r\n(?#day_of_month)(\\*|(?:[1-9]|(?:[12][0-9])|3[01])(?:(?:\\-(?:[1-9]|\r\n(?:[12][0-9])|3[01]))?|(?:\\,(?:[1-9]|(?:[12][0-9])|3[01]))*)) (?#month)(\\*|\r\n(?:[1-9]|1[012]|JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:\\-(?:[1-9]|\r\n1[012]|JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?|(?:\\,(?:[1-9]|1[012]|\r\nJAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))*)) (?#day_of_week)(\\*|\r\n(?:[0-6]|SUN|MON|TUE|WED|THU|FRI|SAT)(?:(?:\\-(?:[0-6]|SUN|MON|TUE|WED|THU|FRI|SAT))?|\r\n(?:\\,(?:[0-6]|SUN|MON|TUE|WED|THU|FRI|SAT))*))$"
                },
                "batchSize": {
                    "type": "integer",
                    "description": "The size of scheduled job source batch",
                    "default": 1
                },
                "load": {
                    "type": "string",
                    "description": "The load type of the scheduled job source",
                    "enum": [
                        "full",
                        "delta"
                    ],
                    "default": "delta"
                },
                "ignoreQueryTimestamp": {
                    "type": "boolean",
                    "description": "If the query timestamp of the scheduled job source should be ignored",
                    "default": false
                }
            },
            "required": [
                "type",
                "frequency"
            ],
            "additionalProperties": false
        },
        "googleSheetSource": {
            "title": "Google Sheet source",
            "properties": {
                "type": {
                    "const": "googleSheet"
                },
                "authentication": {
                    "$ref": "#/$defs/authenticationType"
                },
                "filePath": {
                    "type": "string",
                    "description": "The path of the Google Sheet (https://drive.google.com/open?id=...)",
                    "pattern": "^https:\\/\\/drive\\.google\\.com\\/open\\?id=[a-zA-Z0-9-_]+$"
                },
                "range": {
                    "type": "string",
                    "description": "The range within the Google Sheet (sheet_name!top_left_cell_id:bottom_right_cell_id)",
                    "default": null,
                    "pattern": "^\\w+![A-Z]+[0-9]+:[A-Z]+[0-9]+$"
                },
                "skipLeadingRows": {
                    "type": "integer",
                    "description": "The number of rows to skip at the top of the Google Sheet",
                    "default": 1
                }
            },
            "required": [
                "type",
                "filePath"
            ],
            "additionalProperties": false
        }
    }
}